{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,aAAa,GAAG;AAChB,YAAQ,EAAE,EAAE;;AAEZ,QAAI,EAAE,cAAU,SAAS,EAAa;YAAX,IAAI,yDAAG,EAAE;;AAChC,YAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;AACzB,gBAAI,GAAG,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;SACzB;;AAED,YAAI,OAAO,GAAG,EAAE,CAAA;AAChB,YAAI,CAAC,SAAS,GAAG,SAAS,CAAA;;AAE1B,aAAM,IAAI,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAC;AACpC,gBAAI,YAAY,IAAI,SAAS,EAAE;AAC3B,qBAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzD,wBAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;AACtD,2BAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;iBAC5B;aACJ;SACJ;;AAED,eAAO,OAAO,CAAA;KACjB;;AAED,MAAE,EAAE,YAAU,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE;;AAEvC,YAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,CAAA;;AAEzD,YAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;AACpD,gBAAQ,CAAC,OAAO,GAAG,MAAM,CAAC;KAC7B;;;AAGD,OAAG,EAAE,aAAU,SAAS,EAAE;AACtB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,gBAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;SACrC;KACJ;;;AAGD,aAAS,EAAE,mBAAU,MAAM,EAAE;AAC3B,aAAK,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC9B,gBAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACxC,gBAAI,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,UAAU,QAAQ,EAAE;AACpD,uBAAO,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC;aAClC,CAAC,CAAC,GAAG,CAAC,UAAU,QAAQ,EAAE,KAAK,EAAE;AAChC,uBAAO,KAAK,CAAC;aACd,CAAC,CAAC;;AAEH,gBAAI,WAAW,GAAG,CAAC,CAAC;AACpB,kBAAM,CAAC,OAAO,CAAC,UAAU,KAAK,EAAE;AAC9B,6BAAa,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,EAAE,CAAC,CAAC,CAAC;AAC7C,2BAAW,GAAG,WAAW,GAAG,CAAC,CAAC;aAC/B,CAAC,CAAC;SACJ;KACF;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "let KQGlobalEvent = {\n    _handles: {},\n    //发送事件\n    emit: function (eventName, data = {}) {\n        if (typeof data == 'string') {\n            data = {'data': data};\n        }\n\n        var returns = [] //返回值\n        data.eventName = eventName//保存一下事件名字\n\n        for ( var findEvenName in this._handles){\n            if (findEvenName == eventName) {\n                for (var i = 0; i < this._handles[findEvenName].length; i++) {\n                    var returnValue = this._handles[findEvenName][i](data)\n                    returns.push(returnValue)\n                }\n            }\n        }\n\n        return returns\n    },\n    //添加普通事件\n    on: function (eventName, callback, target) {\n        // console.log('收到事件', eventName);\n        this._handles[eventName] = this._handles[eventName] || []\n\n        this._handles[eventName].push(callback.bind(target))\n        callback._caller = target;\n    },\n\n    //通过事件名移除一个监听器\n    off: function (eventName) {\n        for (var i = 0; i < this._handles[eventName].length; i++) {\n            this._handles[eventName][i] = null\n        }\n    },\n\n    // 移动一个 target 上所有的监听\n    offTarget: function (target) {\n      for (var name in this._handles) {\n        var eventHandlers = this._handles[name];\n        var indexs = eventHandlers.filter(function (callback) {\n          return callback._caller = target;\n        }).map(function (callback, index) {\n          return index;\n        });\n\n        var indexOffset = 0;\n        indexs.forEach(function (index) {\n          eventHandlers.splice(index + indexOffset, 1);\n          indexOffset = indexOffset + 1;\n        });\n      }\n    },\n};\n\nmodule.exports = KQGlobalEvent;\n"
  ]
}