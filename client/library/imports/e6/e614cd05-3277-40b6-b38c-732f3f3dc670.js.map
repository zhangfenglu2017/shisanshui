{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjC,EAAE,CAAC,KAAK,CAAC;AACL,aAAS,EAAE,CAAC,SAAS;;AAErB,YAAU,EAAE;AACV,aAAS,EAAE,IAAI;AACf,cAAU,EAAE,IAAI;GACjB;;;AAGD,QAAM,EAAE,kBAAY,EAEnB;;AAED,SAAO,EAAE,iBAAU,QAAQ,EAAE,KAAK,EAAe;QAAb,IAAI,yDAAG,IAAI;;AAC7C,QAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAG,IAAI,EAAC;AACJ,UAAI,CAAC,UAAU,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAC,IAAI,EAAC,KAAK,CAAC,CAAC;KACrD;AACD,QAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAA,UAAU,WAAW,EAAE;AACnD,UAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/D,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GACf;;AAED,UAAQ,EAAE,oBAAY;AACpB,WAAO,IAAI,CAAC,SAAS,CAAC;GACvB;;AAED,UAAQ,EAAE,oBAAY;AACpB,WAAO,IAAI,CAAC,UAAU,CAAC;GACxB;;AAED,eAAa,EAAE,uBAAU,aAAa,EAAE;AACtC,QAAI,QAAQ,GAAG,aAAa,CAAC;AAC7B,QAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,uBAAuB,CAAC,EAAE;AACjD,cAAQ,GAAG,wBAAwB,GAAG,QAAQ,CAAC;KAChD;;AAED,WAAO,QAAQ,CAAC;GACjB;;AAED,gBAAc,EAAE,wBAAU,QAAQ,EAAE,QAAQ,EAAE;AAC5C,MAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAEpB,MAAE,CAAC,MAAM,CAAC,OAAO,CAAC,+BAA+B,EAAE,EAAE,CAAC,WAAW,EAAE,CAAA,UAAU,GAAG,EAAE,KAAK,EAAE;AACvF,UAAI,GAAG,EAAE;AACP,UAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACd,eAAO;OACR;;AAED,cAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxC,UAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC3C,cAAQ,CAAC,KAAK,CAAC,CAAC;KACjB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GACf;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const KQCard = require('KQCard');\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n      _cardName: null,\r\n      _cardModel: null,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n\r\n    setCard: function (cardName, index, asdf = true) {\r\n      this._cardName = cardName;\r\n      if(asdf){\r\n          this._cardModel = new KQCard(cardName,null,index);\r\n      }\r\n      this._loadCardFrame(cardName, function (spriteFrame) {\r\n        this.node.getComponent('cc.Sprite').spriteFrame = spriteFrame;\r\n      }.bind(this));\r\n    },\r\n\r\n    cardName: function () {\r\n      return this._cardName;\r\n    },\r\n\r\n    cardMode: function () {\r\n      return this._cardModel;\r\n    },\r\n\r\n    _cardFullName: function (cardShortName) {\r\n      var cardName = cardShortName;\r\n      if (!cardName.startsWith(\"public-pic-card-poker\")) {\r\n        cardName = \"public-pic-card-poker-\" + cardName;\r\n      }\r\n\r\n      return cardName;\r\n    },\r\n\r\n    _loadCardFrame: function (cardName, callback) {\r\n      cc.assert(callback);\r\n\r\n      cc.loader.loadRes(\"play/CardTypeCombine/pockList\", cc.SpriteAtlas, function (err, atlas) {\r\n        if (err) {\r\n          cc.error(err);\r\n          return;\r\n        }\r\n\r\n        cardName = this._cardFullName(cardName);\r\n        var frame = atlas.getSpriteFrame(cardName);\r\n        callback(frame);\r\n      }.bind(this));\r\n    },\r\n});\r\n"
  ]
}