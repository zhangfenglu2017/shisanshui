{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAEjC,EAAE,CAAC,KAAK,CAAC;AACL,aAAS,EAAE,CAAC,SAAS;;AAErB,YAAU,EAAE;AACR,cAAU,EAAE,EAAE,CAAC,MAAM;;AAErB,aAAS,EAAE,IAAI;AACf,eAAW,EAAE,IAAI;GACpB;;;AAGD,QAAM,EAAE,kBAAY;AAClB,QAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;GACrC;;;AAGD,SAAO,EAAE,iBAAU,QAAQ,EAAE;AAC3B,QAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;;AAE5B,QAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAA,UAAU,WAAW,EAAE;AACnD,UAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;KAC/D,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GACf;;AAED,UAAQ,EAAE,oBAAY;AACpB,WAAO,IAAI,CAAC,SAAS,CAAC;GACvB;;AAED,UAAQ,EAAE,oBAAY;AACpB,WAAO,IAAI,CAAC,WAAW,CAAC;GACzB;;AAED,cAAY,EAAE,sBAAU,QAAQ,EAAE;AAChC,QAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC1B,QAAI,CAAC,WAAW,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;GACzC;;;AAGD,aAAW,EAAE,uBAA4B;QAAlB,QAAQ,yDAAG,KAAK;;AACrC,QAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;GACxC;;AAED,YAAU,EAAE,sBAAY;AACtB,WAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;GACpC;;AAED,eAAa,EAAE,uBAAU,aAAa,EAAE;AACtC,QAAI,QAAQ,GAAG,aAAa,CAAC;AAC7B,QAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,uBAAuB,CAAC,EAAE;AACjD,cAAQ,GAAG,wBAAwB,GAAG,QAAQ,CAAC;KAChD;;AAED,WAAO,QAAQ,CAAC;GACjB;;AAED,gBAAc,EAAE,wBAAU,QAAQ,EAAE,QAAQ,EAAE;AAC5C,MAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAEpB,MAAE,CAAC,MAAM,CAAC,OAAO,CAAC,+BAA+B,EAAE,EAAE,CAAC,WAAW,EAAE,CAAA,UAAU,GAAG,EAAE,KAAK,EAAE;AACvF,UAAI,GAAG,EAAE;AACP,UAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACd,eAAO;OACR;;AAED,cAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACxC,UAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AAC3C,cAAQ,CAAC,KAAK,CAAC,CAAC;KACjB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GACf;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const KQCard = require('KQCard');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        graySprite: cc.Sprite,\n\n        _cardName: null,\n        _kqCardMode: null\n    },\n\n    // use this for initialization\n    onLoad: function () {\n      this.graySprite.node.active = false;\n    },\n\n    // 通过牌名设置牌\n    setCard: function (cardName) {\n      this._setCardName(cardName);\n\n      this._loadCardFrame(cardName, function (spriteFrame) {\n        this.node.getComponent('cc.Sprite').spriteFrame = spriteFrame;\n      }.bind(this));\n    },\n\n    cardName: function () {\n      return this._cardName;\n    },\n\n    cardMode: function () {\n      return this._kqCardMode;\n    },\n\n    _setCardName: function (cardName) {\n      this._cardName = cardName;\n      this._kqCardMode = new KQCard(cardName);\n    },\n\n    // 设置选择状态\n    setSelected: function (selected = false) {\n      this.graySprite.node.active = selected;\n    },\n\n    isSelected: function () {\n      return this.graySprite.node.active;\n    },\n\n    _cardFullName: function (cardShortName) {\n      var cardName = cardShortName;\n      if (!cardName.startsWith(\"public-pic-card-poker\")) {\n        cardName = \"public-pic-card-poker-\" + cardName;\n      }\n\n      return cardName;\n    },\n\n    _loadCardFrame: function (cardName, callback) {\n      cc.assert(callback);\n\n      cc.loader.loadRes(\"play/CardTypeCombine/pockList\", cc.SpriteAtlas, function (err, atlas) {\n        if (err) {\n          cc.error(err);\n          return;\n        }\n\n        cardName = this._cardFullName(cardName);\n        var frame = atlas.getSpriteFrame(cardName);\n        callback(frame);\n      }.bind(this));\n    },\n});\n"
  ]
}