{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,iBAAS,EAAE,EAAE,CAAC,KAAK;;;AAGnB,iBAAS,EAAE,IAAI;KAClB;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC;KAC/B;;;;;;;;AAQD,kBAAc,EAAE,wBAAS,IAAI,EAAE,QAAQ,EAAE;AACrC,YAAI,CAAC,IAAI,EAAE,CAAC;AACZ,YAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;AAE1B,YAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACxB,YAAI,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC;AAClC,YAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACxC,YAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,CAAA;KAChD;;AAED,QAAI,EAAE,gBAAW;AACb,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,YAAI,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;AAEzB,YAAI,IAAI,CAAC,SAAS,EAAE;AAChB,gBAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACnD,gBAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;AAC9B,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,oBAAQ,CAAC,SAAS,CAAC,CAAC;SACvB;;AAED,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;;AAED,cAAU,EAAE,sBAAW;AACnB,YAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;AAChD,YAAI,GAAG,IAAI,GAAG,CAAC,CAAC;;AAEhB,YAAI,IAAI,IAAI,CAAC,EAAE;AACX,gBAAI,CAAC,IAAI,EAAE,CAAC;SACf;;AAED,YAAI,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;KACxC;;CAGJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        labelTime: cc.Label,\n        //timeNode: cc.Node,\n\n        _callback: null,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.labelTime.string = \"0\";\n    },\n\n    /**\n     * 开始倒计时\n     * \n     * @param  {Number} time 时长\n     * @param  {Function} callback 倒计时的回调\n     */\n    startCountdown: function(time, callback) {\n        this.stop();\n        this._callback = callback;\n\n        this.node.active = true;\n        this.labelTime.string = \"\" + time;\n        this.schedule(this._countDown, 1, time);\n        this.getComponent(\"time\").setTime(time * 0.5)\n    },\n\n    stop: function() {\n        this.unschedule(this._countDown);\n        this.node.active = false;\n\n        if (this._callback) {\n            let isTimeout = Number(this.labelTime.string) <= 0;\n            let callback = this._callback;\n            this._callback = null;\n            callback(isTimeout);\n        }\n\n        this._callback = null;\n    },\n\n    _countDown: function() {\n        var time = Number(this.labelTime.string || \"0\");\n        time = time - 1;\n\n        if (time <= 0) {\n            this.stop();\n        }\n\n        this.labelTime.string = String(time);\n    },\n\n\n});\n"
  ]
}