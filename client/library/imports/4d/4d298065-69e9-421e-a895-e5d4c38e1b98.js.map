{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const Socket = require('socket');\nconst KQGlobalEvent = require('KQGlobalEvent');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        matchingLabel:cc.Label,\n        timeNode:cc.Node,\n        matchingNode:cc.Node,\n        waitingPrefab: cc.Prefab,\n        alertPrefab: cc.Prefab,\n\n        tishi:cc.Node,\n\n        _userId: null,\n        _response: null,\n    },\n\n    // use this for initialization\n    onLoad: function () {\n      this._userId = Socket.instance.userInfo.id;\n      cc.isRoomViewShow = true;\n      KQGlobalEvent.on(Socket.Event.ReceiveDeskInfo, this._socketReceiveDeskInfo ,this);\n      KQGlobalEvent.on(Socket.Event.SocketDisconnect, this._socketDisconnect, this);\n      KQGlobalEvent.on(Socket.Event.SocketConnectSuccessed, this._socketConnected, this);\n      KQGlobalEvent.on(Socket.Event.ReceiveInterRandom, this._socketReceiveInterRandom, this);\n    },\n\n    _socketReceiveDeskInfo: function (response) {\n      if (!response.result) {\n        return;\n      }\n\n      cc.director.loadScene('play');\n    },\n\n    _socketReceiveInterRandom: function(response) {\n        //服务器发送  {'action':'interRandom','result':false,'data':{'reason':reason}}\n        this._response = response;\n        this.unschedule(this._timeoutRandomAction);\n        // 处理随机场匹配不成功的情况\n        if (response.result) {\n            return;\n        }\n\n        let reason = response.data.reason || \"加入随机场失败\";\n        this.showAlertMessage(reason);\n\n        if (reason == '你已经在匹配队列') {\n            this._showMatching();\n        } else {\n            this._hideMatching();\n        }\n    },\n\n    _socketDisconnect: function() {\n      // 连接已断开\n      this.matchingNode.active = false;\n      this.showNetworkMessage('网络链接断开，重新连接中...');\n    },\n\n    _socketConnected: function() {\n      this.hiddenNetworkMessage();\n    },\n\n\n    onDestroy: function () {\n      KQGlobalEvent.offTarget(this);\n    },\n\n    clickExit: function () {\n        cc.director.loadScene('hall');\n    },\n\n    clickStart: function () {\n      Socket.sendEnterRandom(this._userId);\n      this._showMatching();\n\n      /*#####begin*/\n      //reason是服务器发送回来的\n      /*if(this._response.data.reason == \"你的钻石不足\"){\n          this.tishi.active = true;\n      }*/\n      /*#####end*/\n\n      this.scheduleOnce(this._timeoutRandomAction, 5);\n    },\n    /*#####点击空白地方，砖石不足提示消失*/\n    /*onBtnKong:function () {\n        if(this.tishi.active){\n            this.tishi.active = false;\n        }else{\n            //什么也不做\n        }\n    },*/\n    /*取消匹配*/\n    clickCancel:function () {\n      Socket.sendCancelRandom(this._userId);\n\n      this._hideMatching();\n    },\n\n    _timeoutRandomAction: function() {\n        this._hideMatching();\n        this.showAlertMessage('进入匹配失败');\n    },\n\n    _showMatching: function() {\n        var comp = this.matchingNode.getComponent('alert');\n        comp.alert();\n        this.matchingLabel.string = '正在匹配中，请稍后...';\n        let num = 0;\n        this.schedule(function() {\n            num = num + 0.5;\n            this.timeNode.rotation = num;\n         }, 0.01);\n    },\n\n    _hideMatching: function() {\n        var comp = this.matchingNode.getComponent('alert');\n        comp.dismissAction();\n    },\n\n     showNetworkMessage:function(msg) {\n        this.unschedule(this._timeoutRandomAction);\n\n        if (this.networkNode != null) {\n            var removeSelfAction = cc.removeSelf();\n            this.networkNode.runAction(removeSelfAction);\n            this.networkNode = null;\n        }\n        this.networkNode = cc.instantiate(this.waitingPrefab);\n        this.node.addChild(this.networkNode);\n        var comp = this.networkNode.getComponent('alert');\n        var self = this;\n        comp.onDismissComplete = function() {\n            self.networkNode = null;\n        };\n        comp.setMessage(msg);\n        comp.alert();\n    },\n\n    hiddenNetworkMessage:function() {\n        if (this.networkNode != null) {\n            this.networkNode.getComponent('alert').dismissAction();\n        }\n    },\n\n    showAlertMessage: function(msg) {\n        if (!msg) {\n            cc.error(\"不能显示为空的信息\");\n            return;\n        }\n\n        if (!this.alertMessageNode) {\n            this.alertMessageNode = cc.instantiate(this.alertPrefab);\n            this.node.addChild(this.alertMessageNode);\n        }\n\n        this.alertMessageNode.getComponent('alert').setMessage(msg);\n        this.alertMessageNode.getComponent('alert').alert();\n    },\n});\n"
  ]
}